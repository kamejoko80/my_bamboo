/******************************************************************************
 *
 * Name:	PMUA.h
 * Project:	Hermon-2
 * Purpose:	Testing
 *
 ******************************************************************************/

/******************************************************************************
 *
 *  (C)Copyright 2005 - 2008 Marvell. All Rights Reserved.
 *  
 *  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF MARVELL.
 *  The copyright notice above does not evidence any actual or intended 
 *  publication of such source code.
 *  This Module contains Proprietary Information of Marvell and should be
 *  treated as Confidential.
 *  The information in this file is provided for the exclusive use of the 
 *  licensees of Marvell.
 *  Such users have the right to use, modify, and incorporate this code into 
 *  products for purposes authorized by the license agreement provided they 
 *  include this notice and the associated copyright notice with any such
 *  product. 
 *  The information in this file is provided "AS IS" without warranty.
 *
 ******************************************************************************/

/******************************************************************************
 *
 * This file was automatically generated by reg.pl using  *	PMUA.csv
 *
 ******************************************************************************/

/******************************************************************************
 *
 * History:
 *
 ********* PLEASE INSERT THE CVS HISTORY OF THE PREVIOUS VERSION HERE. *********
 *******************************************************************************/

#ifndef	__INC_PMUA_H
#define	__INC_PMUA_H


/*
 *
 *	THE BASE ADDRESSES
 *
 */
#define	PMUA_BASE	0xD4282800

/*
 *
 *	THE REGISTER DEFINES
 *
 */
#define	PMUA_CC_CP					(PMUA_BASE+0x0000)	/* 32 bit	CP Clock
														 *			Control
														 *			Register
														 */
#define	PMUA_CC_AP					(PMUA_BASE+0x0004)	/* 32 bit	AP Clock
														 *			Control
														 *			Register
														 */
#define	PMUA_DM_CC_CP				(PMUA_BASE+0x0008)	/* 32 bit	Dummy CP
														 *			Clock
														 *			Control
														 *			Register
														 */
#define	PMUA_DM_CC_AP				(PMUA_BASE+0x000C)	/* 32 bit	Dummy AP
														 *			Clock
														 *			Control
														 *			Register
														 */
#define	PMUA_FC_TIMER				(PMUA_BASE+0x0010)	/* 32 bit	Frequency
														 *			Change
														 *			Timer
														 *			Register
														 */
#define	PMUA_CP_IDLE_CFG			(PMUA_BASE+0x0014)	/* 32 bit	CP Idle
														 *			Configuration
														 *			Register
														 */
#define	PMUA_AP_IDLE_CFG			(PMUA_BASE+0x0018)	/* 32 bit	AP Idle
														 *			Configuration
														 *			Register
														 */
#define	PMUA_SQU_CLK_GATE_CTRL		(PMUA_BASE+0x001C)	/* 32 bit	SQU Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_IRE_CLK_GATE_CTRL		(PMUA_BASE+0x0020)	/* 32 bit	Image
														 *			Rotation
														 *			Engine
														 *			Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_CCIC_CLK_GATE_CTRL		(PMUA_BASE+0x0028)	/* 32 bit	CMOS Camera
														 *			Interface
														 *			Controller
														 *			Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_FBRC0_CLK_GATE_CTRL	(PMUA_BASE+0x002C)	/* 32 bit	Fabric0
														 *			Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_FBRC1_CLK_GATE_CTRL	(PMUA_BASE+0x0030)	/* 32 bit	Fabric1
														 *			Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_USB_CLK_GATE_CTRL		(PMUA_BASE+0x0034)	/* 32 bit	USB Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_PMU_CLK_GATE_CTRL		(PMUA_BASE+0x0040)	/* 32 bit	PMU Dynamic
														 *			Clock
														 *			Gate
														 *			Control
														 *			Register
														 */
#define	PMUA_IRE_CLK_RES_CTRL		(PMUA_BASE+0x0048)	/* 32 bit	IRE
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_LCD_CLK_RES_CTRL		(PMUA_BASE+0x004C)	/* 32 bit	LCD
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_CCIC_CLK_RES_CTRL		(PMUA_BASE+0x0050)	/* 32 bit	CCIC
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_SDH0_CLK_RES_CTRL		(PMUA_BASE+0x0054)	/* 32 bit	SDH0
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_SDH1_CLK_RES_CTRL		(PMUA_BASE+0x00E0)	/* 32 bit	SDH1
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_USB_CLK_RES_CTRL		(PMUA_BASE+0x005C)	/* 32 bit	USB
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_NF_CLK_RES_CTRL		(PMUA_BASE+0x0060)	/* 32 bit	NF
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_DMA_CLK_RES_CTRL		(PMUA_BASE+0x0064)	/* 32 bit	DMA
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_AES_CLK_RES_CTRL		(PMUA_BASE+0x0068)	/* 32 bit	AES
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_BUS_CLK_RES_CTRL		(PMUA_BASE+0x006c)	/* 32 bit	BUS
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_CP_IMR					(PMUA_BASE+0x0070)	/* 32 bit	PMU CP
														 *			Interrupt
														 *			Mask
														 *			Register
														 */
#define	PMUA_CP_IRWC				(PMUA_BASE+0x0074)	/* 32 bit	PMU CP
														 *			Interrupt
														 *			READ/WRITE
														 *			Clear
														 *			Register
														 */
#define	PMUA_CP_ISR					(PMUA_BASE+0x0078)	/* 32 bit	PMU CP
														 *			Interrupt
														 *			Status
														 *			Register
														 */
#define	PMUA_SD_ROT_WAKE_CLR		(PMUA_BASE+0x007C)	/* 32 bit	SDIO/Rotary
														 *			Wake
														 *			Clear
														 *			Register
														 */
#define	PMUA_PWR_STBL_TIMER			(PMUA_BASE+0x0084)	/* 32 bit	Power
														 *			Stable
														 *			Timer
														 *			Register
														 */
#define	PMUA_DEBUG					(PMUA_BASE+0x0088)	/* 32 bit	PMU Debug
														 *			Register
														 */
#define	PMUA_SRAM_PWR_DWN			(PMUA_BASE+0x008C)	/* 32 bit	Core SRAM
														 *			Power
														 *			Down
														 *			Register
														 */
#define	PMUA_CORE_STATUS			(PMUA_BASE+0x0090)	/* 32 bit	Core Status
														 *			Register
														 */
#define	PMUA_RES_FRM_SLP_CLR		(PMUA_BASE+0x0094)	/* 32 bit	Resume from
														 *			Sleep
														 *			Clear
														 *			Register
														 */
#define	PMUA_AP_IMR					(PMUA_BASE+0x0098)	/* 32 bit	PMU AP
														 *			Interrupt
														 *			Mask
														 *			Register
														 */
#define	PMUA_AP_IRWC				(PMUA_BASE+0x009c)	/* 32 bit	PMU AP
														 *			Interrupt
														 *			READ/WRITE
														 *			Clear
														 *			Register
														 */
#define	PMUA_AP_ISR					(PMUA_BASE+0x00a0)	/* 32 bit	PMU AP
														 *			Interrupt
														 *			Status
														 *			Register
														 */
#define	PMUA_DTC_CLK_RES_CTRL		(PMUA_BASE+0x00ac)	/* 32 bit	DTC
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_MC_HW_SLP_TYPE			(PMUA_BASE+0x00b0)	/* 32 bit	Memory
														 *			Controller
														 *			Hardware
														 *			Sleep
														 *			Type
														 *			Register
														 */
#define	PMUA_MC_SLP_REQ_AP			(PMUA_BASE+0x00b4)	/* 32 bit	Memory
														 *			Controller
														 *			926 Sleep
														 *			Request
														 *			Register
														 */
#define	PMUA_MC_SLP_REQ_CP			(PMUA_BASE+0x00b8)	/* 32 bit	Memory
														 *			Controller
														 *			946 Sleep
														 *			Request
														 *			Register
														 */
#define	PMUA_MC_SLP_REQ_MSA			(PMUA_BASE+0x00bc)	/* 32 bit	Memory
														 *			Controller
														 *			MSA Sleep
														 *			Request
														 *			Register
														 */
#define	PMUA_MC_SW_SLP_TYPE			(PMUA_BASE+0x00c0)	/* 32 bit	Memory
														 *			Controller
														 *			Software
														 *			Sleep
														 *			Type
														 *			Register
														 */
#define	PMUA_PLL_SEL_STATUS			(PMUA_BASE+0x00c4)	/* 32 bit	PLL Clock
														 *			Select
														 *			Status
														 *			Register
														 */
#define	PMUA_SYNC_MODE_BYPASS		(PMUA_BASE+0x00c8)	/* 32 bit	SYNC MODE
														 *			BYPASS
														 *			Register
														 */
#define	PMUA_GC_CLK_RES_CTRL		(PMUA_BASE+0x00cc)	/* 32 bit	GC
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */
#define	PMUA_GC_PWRDWN				(PMUA_BASE+0x00d0)	/* 32 bit	GC Power
														 *			Down
														 *			Register
														 */
#define	PMUA_SMEMC_CLK_RES_CTRL		(PMUA_BASE+0x00d4)	/* 32 bit	SMEMC
														 *			Clock/Reset
														 *			Control
														 *			Register
														 */

/*
 *
 *	THE BIT DEFINES
 *
 */
/*	PMUA_CC_CP					0x0000	CP Clock Control Register */
#define	PMUA_CC_CP_CP_RD_ST_CLEAR			BIT_31			/* RD_ST Clear */
/* Dynamic ACLK Clock Change */
#define	PMUA_CC_CP_ACLK_DYN_FC				BIT_30			
/* Dynamic DCLK Clock Change */
#define	PMUA_CC_CP_DCLK_DYN_FC				BIT_29			
/* Dynamic Core Clock Change */
#define	PMUA_CC_CP_CORE_DYN_FC				BIT_28			
/* CP Speed Change Voting */
#define	PMUA_CC_CP_CP_ALLOW_SPD_CHG			BIT_27			
/* ACLK Frequency Change Request */
#define	PMUA_CC_CP_BUS_FREQ_CHG_REQ			BIT_26			
/* DCLK Frequency Change Request */
#define	PMUA_CC_CP_DDR_FREQ_CHG_REQ			BIT_25			
/* CP Frequency Change Request */
#define	PMUA_CC_CP_CP_FREQ_CHG_REQ			BIT_24			
/* AP Bus Interface Sync with Bus Interface */
#define	PMUA_CC_CP_ASYNC5					BIT_23			
/* CP Bus Interface Sync with Bus Interface */
#define	PMUA_CC_CP_ASYNC4					BIT_22			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_CC_CP_ASYNC3_1					BIT_21			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_CC_CP_ASYNC3					BIT_20			
/* AP Bus Interface Sync with DDR Controller */
#define	PMUA_CC_CP_ASYNC2					BIT_19			
/* CP Bus Interface Sync with DDR Controller */
#define	PMUA_CC_CP_ASYNC1					BIT_18			
/* Clock Divider Selection for ACLK */
#define	PMUA_CC_CP_BUS_CLK_DIV_MSK			SHIFT15(0x7)	
#define	PMUA_CC_CP_BUS_CLK_DIV_BASE			15
/* Clock Divider Selection for DCLK */
#define	PMUA_CC_CP_DDR_CLK_DIV_MSK			SHIFT12(0x7)	
#define	PMUA_CC_CP_DDR_CLK_DIV_BASE			12
/* Clock Divider Selection for XPCLK */
#define	PMUA_CC_CP_XP_CLK_DIV_MSK			SHIFT9(0x7)		
#define	PMUA_CC_CP_XP_CLK_DIV_BASE			9
/* Clock Divider Selection for BACLK1 */
#define	PMUA_CC_CP_BIU_CLK_DIV_MSK			SHIFT6(0x7)		
#define	PMUA_CC_CP_BIU_CLK_DIV_BASE			6
/* Clock Divider Selection for PDCLK1 */
#define	PMUA_CC_CP_BUS_MC_CLK_DIV_MSK		SHIFT3(0x7)		
#define	PMUA_CC_CP_BUS_MC_CLK_DIV_BASE		3
/* Clock Divider Selection for PCLK */
#define	PMUA_CC_CP_CORE_CLK_DIV_MSK			SHIFT0(0x7)		
#define	PMUA_CC_CP_CORE_CLK_DIV_BASE		0

/*	PMUA_CC_AP					0x0004	AP Clock Control Register */
#define	PMUA_CC_AP_AP_RD_ST_CLEAR			BIT_31			/* RD_ST Clear */
/* Dynamic ACLK Clock Change */
#define	PMUA_CC_AP_ACLK_DYN_FC				BIT_30			
/* Dynamic DCLK Clock Change */
#define	PMUA_CC_AP_DCLK_DYN_FC				BIT_29			
/* Dynamic Core Clock Change */
#define	PMUA_CC_AP_CORE_DYN_FC				BIT_28			
/* AP Speed Change Voting */
#define	PMUA_CC_AP_AP_ALLOW_SPD_CHG			BIT_27			
/* ACLK Frequency Change Request */
#define	PMUA_CC_AP_BUS_FREQ_CHG_REQ			BIT_26			
/* DCLK Frequency Change Request */
#define	PMUA_CC_AP_DDR_FREQ_CHG_REQ			BIT_25			
/* AP Frequency Change Request */
#define	PMUA_CC_AP_AP_FREQ_CHG_REQ			BIT_24			
/* AP Bus Interface Sync with Bus Interface */
#define	PMUA_CC_AP_ASYNC5					BIT_23			
/* CP Bus Interface Sync with Bus Interface */
#define	PMUA_CC_AP_ASYNC4					BIT_22			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_CC_AP_ASYNC3_1					BIT_21			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_CC_AP_ASYNC3					BIT_20			
/* AP Bus Interface Sync with DDR Controller */
#define	PMUA_CC_AP_ASYNC2					BIT_19			
/* CP Bus Interface Sync with DDR Controller */
#define	PMUA_CC_AP_ASYNC1					BIT_18			
/* Clock Divider Selection for ACLK */
#define	PMUA_CC_AP_BUS_CLK_DIV_MSK			SHIFT15(0x7)	
#define	PMUA_CC_AP_BUS_CLK_DIV_BASE			15
/* Clock Divider Selection for DCLK */
#define	PMUA_CC_AP_DDR_CLK_DIV_MSK			SHIFT12(0x7)	
#define	PMUA_CC_AP_DDR_CLK_DIV_BASE			12
/* Clock Divider Selection for XPCLK */
#define	PMUA_CC_AP_XP_CLK_DIV_MSK			SHIFT9(0x7)		
#define	PMUA_CC_AP_XP_CLK_DIV_BASE			9
/* Clock Divider Selection for BACLK1 */
#define	PMUA_CC_AP_BIU_CLK_DIV_MSK			SHIFT6(0x7)		
#define	PMUA_CC_AP_BIU_CLK_DIV_BASE			6
/* Clock Divider Selection for PDCLK1 */
#define	PMUA_CC_AP_BUS_MC_CLK_DIV_MSK		SHIFT3(0x7)		
#define	PMUA_CC_AP_BUS_MC_CLK_DIV_BASE		3
/* Clock Divider Selection for PCLK */
#define	PMUA_CC_AP_CORE_CLK_DIV_MSK			SHIFT0(0x7)		
#define	PMUA_CC_AP_CORE_CLK_DIV_BASE		0

/*	PMUA_DM_CC_CP				0x0008	Dummy CP Clock Control Register */
/*		Bit(s) PMUA_DM_CC_CP_RSRV_31_30 reserved */
/* ACLK Frequency Change Done Status */
#define	PMUA_DM_CC_CP_ACLK_FC_DONE				BIT_29			
/* DCLK Frequency Change Done Status */
#define	PMUA_DM_CC_CP_DCLK_FC_DONE				BIT_28			
/* AP Frequency Change Done Status */
#define	PMUA_DM_CC_CP_AP_FC_DONE				BIT_27			
/* CP Frequency Change Done Status */
#define	PMUA_DM_CC_CP_CP_FC_DONE				BIT_26			
#define	PMUA_DM_CC_CP_AP_RD_STATUS				BIT_25			/* AP Read Status */
#define	PMUA_DM_CC_CP_CP_RD_STATUS				BIT_24			/* CP Read Status */
/* AP Bus Interface Sync with Bus Interface */
#define	PMUA_DM_CC_CP_ASYNC5					BIT_23			
/* CP Bus Interface Sync with Bus Interface */
#define	PMUA_DM_CC_CP_ASYNC4					BIT_22			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_CP_ASYNC3_1					BIT_21			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_CP_ASYNC3					BIT_20			
/* AP Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_CP_ASYNC2					BIT_19			
/* CP Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_CP_ASYNC1					BIT_18			
/* Clock Divider Selection for ACLK */
#define	PMUA_DM_CC_CP_BUS_CLK_DIV_MSK			SHIFT15(0x7)	
#define	PMUA_DM_CC_CP_BUS_CLK_DIV_BASE			15
/* Clock Divider Selection for DCLK */
#define	PMUA_DM_CC_CP_DDR_CLK_DIV_MSK			SHIFT12(0x7)	
#define	PMUA_DM_CC_CP_DDR_CLK_DIV_BASE			12
/* Clock Divider Selection for XPCLK */
#define	PMUA_DM_CC_CP_XP_CLK_DIV_MSK			SHIFT9(0x7)		
#define	PMUA_DM_CC_CP_XP_CLK_DIV_BASE			9
/* Clock Divider Selection for BACLK1 */
#define	PMUA_DM_CC_CP_BIU_CLK_DIV_MSK			SHIFT6(0x7)		
#define	PMUA_DM_CC_CP_BIU_CLK_DIV_BASE			6
/* Clock Divider Selection for PDCLK1 */
#define	PMUA_DM_CC_CP_BUS_MC_CLK_DIV_MSK		SHIFT3(0x7)		
#define	PMUA_DM_CC_CP_BUS_MC_CLK_DIV_BASE		3
/* Clock Divider Selection for PCLK */
#define	PMUA_DM_CC_CP_CORE_CLK_DIV_MSK			SHIFT0(0x7)		
#define	PMUA_DM_CC_CP_CORE_CLK_DIV_BASE			0

/*	PMUA_DM_CC_AP				0x000C	Dummy AP Clock Control Register */
/*		Bit(s) PMUA_DM_CC_AP_RSRV_31_30 reserved */
/* ACLK Frequency Change Done Status */
#define	PMUA_DM_CC_AP_ACLK_FC_DONE				BIT_29			
/* DCLK Frequency Change Done Status */
#define	PMUA_DM_CC_AP_DCLK_FC_DONE				BIT_28			
/* AP Frequency Change Done Status */
#define	PMUA_DM_CC_AP_AP_FC_DONE				BIT_27			
/* CP Frequency Change Done Status */
#define	PMUA_DM_CC_AP_CP_FC_DONE				BIT_26			
#define	PMUA_DM_CC_AP_AP_RD_STATUS				BIT_25			/* AP Read Status */
#define	PMUA_DM_CC_AP_CP_RD_STATUS				BIT_24			/* CP Read Status */
/* AP Bus Interface Sync with Bus Interface */
#define	PMUA_DM_CC_AP_ASYNC5					BIT_23			
/* CP Bus Interface Sync with Bus Interface */
#define	PMUA_DM_CC_AP_ASYNC4					BIT_22			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_AP_ASYNC3_1					BIT_21			
/* AXI Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_AP_ASYNC3					BIT_20			
/* AP Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_AP_ASYNC2					BIT_19			
/* CP Bus Interface Sync with DDR Controller */
#define	PMUA_DM_CC_AP_ASYNC1					BIT_18			
/* Clock Divider Selection for ACLK */
#define	PMUA_DM_CC_AP_BUS_CLK_DIV_MSK			SHIFT15(0x7)	
#define	PMUA_DM_CC_AP_BUS_CLK_DIV_BASE			15
/* Clock Divider Selection for DCLK */
#define	PMUA_DM_CC_AP_DDR_CLK_DIV_MSK			SHIFT12(0x7)	
#define	PMUA_DM_CC_AP_DDR_CLK_DIV_BASE			12
/* Clock Divider Selection for XPCLK */
#define	PMUA_DM_CC_AP_XP_CLK_DIV_MSK			SHIFT9(0x7)		
#define	PMUA_DM_CC_AP_XP_CLK_DIV_BASE			9
/* Clock Divider Selection for BACLK1 */
#define	PMUA_DM_CC_AP_BIU_CLK_DIV_MSK			SHIFT6(0x7)		
#define	PMUA_DM_CC_AP_BIU_CLK_DIV_BASE			6
/* Clock Divider Selection for PDCLK1 */
#define	PMUA_DM_CC_AP_BUS_MC_CLK_DIV_MSK		SHIFT3(0x7)		
#define	PMUA_DM_CC_AP_BUS_MC_CLK_DIV_BASE		3
/* Clock Divider Selection for PCLK */
#define	PMUA_DM_CC_AP_CORE_CLK_DIV_MSK			SHIFT0(0x7)		
#define	PMUA_DM_CC_AP_CORE_CLK_DIV_BASE			0

/*	PMUA_FC_TIMER				0x0010	Frequency Change Timer Register */
/*		Bit(s) PMUA_FC_TIMER_RSRV_31_24 reserved */
#define	PMUA_FC_TIMER_FC_CLK_PRE_MSK		SHIFT19(0x1f)	/* Clock Prescaler */
#define	PMUA_FC_TIMER_FC_CLK_PRE_BASE		19
/* Frequency Change Timer */
#define	PMUA_FC_TIMER_FC_TIMER_MSK			SHIFT3(0xffff)	
#define	PMUA_FC_TIMER_FC_TIMER_BASE			3
#define	PMUA_FC_TIMER_FC_TIMER_SEL_MSK		SHIFT1(0x3)		/* Timer Select */
#define	PMUA_FC_TIMER_FC_TIMER_SEL_BASE		1
#define	PMUA_FC_TIMER_FC_TIMER_EN			BIT_0			/* Timer Enable */

/*	PMUA_CP_IDLE_CFG			0x0014	CP Idle Configuration Register */
/*		Bit(s) PMUA_CP_IDLE_CFG_RSRV_31_22 reserved */
/* CP Disable MC SW REQ */
#define	PMUA_CP_IDLE_CFG_CP_DIS_MC_SW_REQ		BIT_21			
#define	PMUA_CP_IDLE_CFG_CP_MC_WAKE_EN			BIT_20			/* CP MC Wake EN */
/* CP L2 Power Switch */
#define	PMUA_CP_IDLE_CFG_CP_L2_PWR_SW_MSK		SHIFT18(0x3)	
#define	PMUA_CP_IDLE_CFG_CP_L2_PWR_SW_BASE		18
/* CP Core Power Switch */
#define	PMUA_CP_IDLE_CFG_CP_PWR_SW_MSK			SHIFT16(0x3)	
#define	PMUA_CP_IDLE_CFG_CP_PWR_SW_BASE			16
/* CP L2 Disable Sleep2 */
#define	PMUA_CP_IDLE_CFG_CP_DIS_L2_SLP2			BIT_15			
/* CP L2 Disable Sleep1 */
#define	PMUA_CP_IDLE_CFG_CP_DIS_L2_SLP1			BIT_14			
/* CP Disable Sleep2 */
#define	PMUA_CP_IDLE_CFG_CP_DIS_SLP2			BIT_13			
/* CP Disable Sleep1 */
#define	PMUA_CP_IDLE_CFG_CP_DIS_SLP1			BIT_12			
/* CP Mask JTAG Idle */
#define	PMUA_CP_IDLE_CFG_CP_MASK_JTAG_IDLE		BIT_11			
/* CP L2 CLOCK Enable/Disable */
#define	PMUA_CP_IDLE_CFG_CP_L2_CLK_DIS			BIT_10			
/* CP L2 Assert Reset */
#define	PMUA_CP_IDLE_CFG_CP_L2_RESETN			BIT_9			
/* CP L2 Isolation enable */
#define	PMUA_CP_IDLE_CFG_CP_L2_ISOB				BIT_8			
/* CP L2 SRAM Power OFF */
#define	PMUA_CP_IDLE_CFG_CP_L2_PWR_OFF			BIT_7			
/* CP SRAM Power Down */
#define	PMUA_CP_IDLE_CFG_CP_SRAM_PWRDWN			BIT_6			
#define	PMUA_CP_IDLE_CFG_CP_PWRDWN				BIT_5			/* CP Power Down */
/*		Bit(s) PMUA_CP_IDLE_CFG_RSRV_4_1 reserved */
/* WFI State Check Mask */
#define	PMUA_CP_IDLE_CFG_MASK_WFI_CHECK			BIT_0			

/*	PMUA_AP_IDLE_CFG			0x0018	AP Idle Configuration Register */
/*		Bit(s) PMUA_AP_IDLE_CFG_RSRV_31_22 reserved */
/* AP Disable MC SW REQ */
#define	PMUA_AP_IDLE_CFG_AP_DIS_MC_SW_REQ		BIT_21			
#define	PMUA_AP_IDLE_CFG_AP_MC_WAKE_EN			BIT_20			/* AP MC Wake EN */
/* AP L2 Power Switch */
#define	PMUA_AP_IDLE_CFG_AP_L2_PWR_SW_MSK		SHIFT18(0x3)	
#define	PMUA_AP_IDLE_CFG_AP_L2_PWR_SW_BASE		18
/* AP Core Power Switch */
#define	PMUA_AP_IDLE_CFG_AP_PWR_SW_MSK			SHIFT16(0x3)	
#define	PMUA_AP_IDLE_CFG_AP_PWR_SW_BASE			16
/* AP L2 Disable Sleep2 */
#define	PMUA_AP_IDLE_CFG_AP_DIS_L2_SLP2			BIT_15			
/* AP L2 Disable Sleep1 */
#define	PMUA_AP_IDLE_CFG_AP_DIS_L2_SLP1			BIT_14			
/* AP Disable Sleep2 */
#define	PMUA_AP_IDLE_CFG_AP_DIS_SLP2			BIT_13			
/* AP Disable Sleep1 */
#define	PMUA_AP_IDLE_CFG_AP_DIS_SLP1			BIT_12			
/* AP Mask JTAG Idle */
#define	PMUA_AP_IDLE_CFG_AP_MASK_JTAG_IDLE		BIT_11			
/* AP L2 CLOCK Enable/Disable */
#define	PMUA_AP_IDLE_CFG_AP_L2_CLK_DIS			BIT_10			
/* AP L2 Assert Reset */
#define	PMUA_AP_IDLE_CFG_AP_L2_RESETN			BIT_9			
/* AP L2 Isolation enable */
#define	PMUA_AP_IDLE_CFG_AP_L2_ISOB				BIT_8			
/* AP L2 SRAM Power OFF */
#define	PMUA_AP_IDLE_CFG_AP_L2_PWR_OFF			BIT_7			
/* AP SRAM Power Down */
#define	PMUA_AP_IDLE_CFG_AP_SRAM_PWRDWN			BIT_6			
#define	PMUA_AP_IDLE_CFG_AP_PWRDWN				BIT_5			/* AP Power Down */
/*		Bit(s) PMUA_AP_IDLE_CFG_RSRV_4_2 reserved */
#define	PMUA_AP_IDLE_CFG_AP_IDLE				BIT_1			/* AP Idle */
/*		Bit(s) PMUA_AP_IDLE_CFG_RSRV_0 reserved */

/*	PMUA_SQU_CLK_GATE_CTRL		0x001C	SQU Dynamic Clock Gate Control Register */
/* SQU Dynamic Clock Gate Control */
#define	PMUA_SQU_CLK_GATE_CTRL_SQU_CLK_GATE_CTRL_MSK		SHIFT0(0xffffffff)	
#define	PMUA_SQU_CLK_GATE_CTRL_SQU_CLK_GATE_CTRL_BASE		0

/*	PMUA_IRE_CLK_GATE_CTRL		0x0020	Image Rotation Engine Dynamic Clock
 *										Gate Control Register
 */
/*		Bit(s) PMUA_IRE_CLK_GATE_CTRL_RSRV_31_8 reserved */
/* Image Rotation Engine Dynamic Clock Gate Control */
#define	PMUA_IRE_CLK_GATE_CTRL_IRE_CLK_GATE_CTRL_MSK		SHIFT0(0xff)		
#define	PMUA_IRE_CLK_GATE_CTRL_IRE_CLK_GATE_CTRL_BASE		0

/*	PMUA_CCIC_CLK_GATE_CTRL		0x0028	CMOS Camera Interface Controller
 *										Dynamic Clock Gate Control Register
 */
/*		Bit(s) PMUA_CCIC_CLK_GATE_CTRL_RSRV_31_16 reserved */
/* CMOS Camera Interface Controller Dynamic Clock Gate Control */
#define	PMUA_CCIC_CLK_GATE_CTRL_CCIC_CLK_GATE_CTRL_MSK		SHIFT0(0xffff)	
#define	PMUA_CCIC_CLK_GATE_CTRL_CCIC_CLK_GATE_CTRL_BASE		0

/*	PMUA_FBRC0_CLK_GATE_CTRL	0x002C	Fabric0 Dynamic Clock Gate Control
 *										Register
 */
/* FBRC0 Dynamic Clock Gate Control */
#define	PMUA_FBRC0_CLK_GATE_CTRL_FBRC0_CLK_GATE_CTRL_MSK		SHIFT0(0xffffffff)	
#define	PMUA_FBRC0_CLK_GATE_CTRL_FBRC0_CLK_GATE_CTRL_BASE		0

/*	PMUA_FBRC1_CLK_GATE_CTRL	0x0030	Fabric1 Dynamic Clock Gate Control
 *										Register
 */
/* FBRC1 Dynamic Clock Gate Control */
#define	PMUA_FBRC1_CLK_GATE_CTRL_FBRC1_CLK_GATE_CTRL_MSK		SHIFT0(0xffffffff)	
#define	PMUA_FBRC1_CLK_GATE_CTRL_FBRC1_CLK_GATE_CTRL_BASE		0

/*	PMUA_USB_CLK_GATE_CTRL		0x0034	USB Dynamic Clock Gate Control Register */
/*		Bit(s) PMUA_USB_CLK_GATE_CTRL_RSRV_31_16 reserved */
/* USB Dynamic Clock Gate Control */
#define	PMUA_USB_CLK_GATE_CTRL_USB_CLK_GATE_CTRL_MSK		SHIFT0(0xffff)	
#define	PMUA_USB_CLK_GATE_CTRL_USB_CLK_GATE_CTRL_BASE		0

/*	PMUA_PMU_CLK_GATE_CTRL		0x0040	PMU Dynamic Clock Gate Control Register */
/*		Bit(s) PMUA_PMU_CLK_GATE_CTRL_RSRV_31_24 reserved */
/* PMU Dynamic Clock Gate Control */
#define	PMUA_PMU_CLK_GATE_CTRL_PMU_CLK_GATE_CTRL_MSK		SHIFT0(0xffffff)	
#define	PMUA_PMU_CLK_GATE_CTRL_PMU_CLK_GATE_CTRL_BASE		0

/*	PMUA_IRE_CLK_RES_CTRL		0x0048	IRE Clock/Reset Control Register */
/*		Bit(s) PMUA_IRE_CLK_RES_CTRL_RSRV_31_4 reserved */
/* IRE AXI Clock Enable */
#define	PMUA_IRE_CLK_RES_CTRL_IRE_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_IRE_CLK_RES_CTRL_RSRV_2_1 reserved */
/* IRE AXI Reset */
#define	PMUA_IRE_CLK_RES_CTRL_IRE_AXI_RST			BIT_0				

/*	PMUA_LCD_CLK_RES_CTRL		0x004C	LCD Clock/Reset Control Register */
/*		Bit(s) PMUA_LCD_CLK_RES_CTRL_RSRV_31_7 reserved */
/* LCD Controller Clock Select */
#define	PMUA_LCD_CLK_RES_CTRL_LCD_CLK_SEL			BIT_6				
/*		Bit(s) PMUA_LCD_CLK_RES_CTRL_RSRV_5 reserved */
/* LCD Peripheral Clock Enable */
#define	PMUA_LCD_CLK_RES_CTRL_LCD_CLK_EN			BIT_4				
/* LCD AXI Clock Enable */
#define	PMUA_LCD_CLK_RES_CTRL_LCD_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_LCD_CLK_RES_CTRL_RSRV_2 reserved */
/* LCD Peripheral Reset */
#define	PMUA_LCD_CLK_RES_CTRL_LCD_RST				BIT_1				
/* LCD AXI Reset */
#define	PMUA_LCD_CLK_RES_CTRL_LCD_AXI_RST			BIT_0				

/*	PMUA_CCIC_CLK_RES_CTRL		0x0050	CCIC Clock/Reset Control Register */
/*		Bit(s) PMUA_CCIC_CLK_RES_CTRL_RSRV_31_15 reserved */
/* PHY Slow Clock Prescaler */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYSLOW_PRER_MSK		SHIFT10(0x1f)		
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYSLOW_PRER_BASE		10
/* CMOS Camera Interface Controller PHY SLOW Clock Enable */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYSLOWCLK_EN			BIT_9				
/* CMOS Camera Interface Controller PHY Slow Reset */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYSLOW_RST				BIT_8				
/* CMOS Camera Interface PHY Clock Select */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYCLK_SEL				BIT_7				
/* CMOS Camera Interface Controller Clock Select */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_CLK_SEL					BIT_6				
/* CMOS Camera Interface Controller PHY Clock Enable */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHYCLK_EN				BIT_5				
/* CMOS Camera Interface Controller Peripheral Clock Enable */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_CLK_EN					BIT_4				
/* CMOS Camera Interface Controller AXI Clock Enable */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_AXICLK_EN				BIT_3				
/* CMOS Camera Interface Controller PHY Reset */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_PHY_RST					BIT_2				
/* CMOS Camera Interface Controller Peripheral Reset */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_RST						BIT_1				
/* CMOS Camera Interface Controller AXI Reset */
#define	PMUA_CCIC_CLK_RES_CTRL_CCIC_AXI_RST					BIT_0				

/*	PMUA_SDH0_CLK_RES_CTRL		0x0054	SDH0 Clock/Reset Control Register */
/*		Bit(s) PMUA_SDH0_CLK_RES_CTRL_RSRV_31_7 reserved */
/* SDH0 Clock Select */
#define	PMUA_SDH0_CLK_RES_CTRL_SDH0_CLK_SEL			BIT_6				
/*		Bit(s) PMUA_SDH0_CLK_RES_CTRL_RSRV_5 reserved */
/* SDH0 Peripheral Clock Enable */
#define	PMUA_SDH0_CLK_RES_CTRL_SDH0_CLK_EN			BIT_4				
/* SDH0 AXI Clock Enable */
#define	PMUA_SDH0_CLK_RES_CTRL_SDH0_AXICLK_EN		BIT_3				
/*		Bit(s) PMUA_SDH0_CLK_RES_CTRL_RSRV_2 reserved */
/* SDH0 Peripheral Reset */
#define	PMUA_SDH0_CLK_RES_CTRL_SDH0_RST				BIT_1				
/* SDH0 AXI Reset */
#define	PMUA_SDH0_CLK_RES_CTRL_SDH0_AXI_RST			BIT_0				

/*	PMUA_SDH1_CLK_RES_CTRL		0x0054	SDH1 Clock/Reset Control Register */
/*		Bit(s) PMUA_SDH1_CLK_RES_CTRL_RSRV_31_7 reserved */
/* SDH1 Clock Select */
#define	PMUA_SDH1_CLK_RES_CTRL_SDH1_CLK_SEL			BIT_6				
/*		Bit(s) PMUA_SDH1_CLK_RES_CTRL_RSRV_5 reserved */
/* SDH1 Peripheral Clock Enable */
#define	PMUA_SDH1_CLK_RES_CTRL_SDH1_CLK_EN			BIT_4				
/* SDH1 AXI Clock Enable */
#define	PMUA_SDH1_CLK_RES_CTRL_SDH1_AXICLK_EN		BIT_3				
/*		Bit(s) PMUA_SDH1_CLK_RES_CTRL_RSRV_2 reserved */
/* SDH1 Peripheral Reset */
#define	PMUA_SDH1_CLK_RES_CTRL_SDH1_RST				BIT_1				
/* SDH1 AXI Reset */
#define	PMUA_SDH1_CLK_RES_CTRL_SDH1_AXI_RST			BIT_0				

/*	PMUA_USB_CLK_RES_CTRL		0x005C	USB Clock/Reset Control Register */
/*		Bit(s) PMUA_USB_CLK_RES_CTRL_RSRV_31_5 reserved */
/* USB SPH AXI Clock Enable */
#define	PMUA_USB_CLK_RES_CTRL_USB_SPH_AXICLK_EN		BIT_4				
/* USB AXI Clock Enable */
#define	PMUA_USB_CLK_RES_CTRL_USB_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_USB_CLK_RES_CTRL_RSRV_2 reserved */
/* USB SPH AXI Reset */
#define	PMUA_USB_CLK_RES_CTRL_USB_SPH_AXI_RST		BIT_1				
/* USB AXI Reset */
#define	PMUA_USB_CLK_RES_CTRL_USB_AXI_RST			BIT_0				

/*	PMUA_NF_CLK_RES_CTRL		0x0060	NF Clock/Reset Control Register */
/*		Bit(s) PMUA_NF_CLK_RES_CTRL_RSRV_31_9 reserved */
#define	PMUA_NF_CLK_RES_CTRL_NF_ECC_RES			BIT_8				/* NF ECC Reset */
/* NF ECC Clock Enable */
#define	PMUA_NF_CLK_RES_CTRL_NF_ECC_CLK_EN		BIT_7				
/* NF Clock Select */
#define	PMUA_NF_CLK_RES_CTRL_NF_CLK_SEL			BIT_6				
/*		Bit(s) PMUA_NF_CLK_RES_CTRL_RSRV_5 reserved */
/* NF Peripheral Clock Enable */
#define	PMUA_NF_CLK_RES_CTRL_NF_CLK_EN			BIT_4				
/* NF AXI Clock Enable */
#define	PMUA_NF_CLK_RES_CTRL_NF_AXICLK_EN		BIT_3				
/*		Bit(s) PMUA_NF_CLK_RES_CTRL_RSRV_2 reserved */
/* NF Peripheral Reset */
#define	PMUA_NF_CLK_RES_CTRL_NF_RST				BIT_1				
#define	PMUA_NF_CLK_RES_CTRL_NF_AXI_RST			BIT_0				/* NF AXI Reset */

/*	PMUA_DMA_CLK_RES_CTRL		0x0064	DMA Clock/Reset Control Register */
/*		Bit(s) PMUA_DMA_CLK_RES_CTRL_RSRV_31_4 reserved */
/* DMA AXI Clock Enable */
#define	PMUA_DMA_CLK_RES_CTRL_DMA_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_DMA_CLK_RES_CTRL_RSRV_2_1 reserved */
/* DMA AXI Reset */
#define	PMUA_DMA_CLK_RES_CTRL_DMA_AXI_RST			BIT_0				

/*	PMUA_AES_CLK_RES_CTRL		0x0068	AES Clock/Reset Control Register */
/*		Bit(s) PMUA_AES_CLK_RES_CTRL_RSRV_31_4 reserved */
/* AES AXI Clock Enable */
#define	PMUA_AES_CLK_RES_CTRL_AES_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_AES_CLK_RES_CTRL_RSRV_2_1 reserved */
/* AES AXI Reset */
#define	PMUA_AES_CLK_RES_CTRL_AES_AXI_RST			BIT_0				

/*	PMUA_BUS_CLK_RES_CTRL		0x006c	BUS Clock/Reset Control Register */
/*		Bit(s) PMUA_BUS_CLK_RES_CTRL_RSRV_31_2 reserved */
/* BUS Reset */
#define	PMUA_BUS_CLK_RES_CTRL_BUS_RST				BIT_1				
#define	PMUA_BUS_CLK_RES_CTRL_MC_RST				BIT_0				/* MC Reset */

/*	PMUA_CP_IMR					0x0070	PMU CP Interrupt Mask Register */
/*		Bit(s) PMUA_CP_IMR_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Mask */
#define	PMUA_CP_IMR_AP_IDLE_WAKE_INTR_MASK		BIT_7				
/* CP Idle Wake up Interrupt Mask */
#define	PMUA_CP_IMR_CP_IDLE_WAKE_INTR_MASK		BIT_6				
/* ACLK Frequency Change Done Interrupt Mask */
#define	PMUA_CP_IMR_ACLK_FC_DONE_INTR_MASK		BIT_5				
/* DCLK Frequency Change Done Interrupt Mask */
#define	PMUA_CP_IMR_DCLK_FC_DONE_INTR_MASK		BIT_4				
/* Frequency Change Done for AP Interrupt Mask */
#define	PMUA_CP_IMR_AP_FC_DONE_INTR_MASK		BIT_3				
/* Frequency Change Done for CP Interrupt Mask */
#define	PMUA_CP_IMR_CP_FC_DONE_INTR_MASK		BIT_2				
/* Frequency Change done by AP Interrupt Mask */
#define	PMUA_CP_IMR_AP_FC_INTR_MASK				BIT_1				
/* Frequency Change done by CP Interrupt Mask */
#define	PMUA_CP_IMR_CP_FC_INTR_MASK				BIT_0				

/*	PMUA_CP_IRWC				0x0074	PMU CP Interrupt READ/WRITE Clear
 *										Register
 */
/*		Bit(s) PMUA_CP_IRWC_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Read Clear */
#define	PMUA_CP_IRWC_AP_IDLE_WAKE_INTR_IRST		BIT_7				
/* CP Idle Wake up Interrupt Read Clear */
#define	PMUA_CP_IRWC_CP_IDLE_WAKE_INTR_IRST		BIT_6				
/* ACLK Frequency Change Done Interrupt Read Clear */
#define	PMUA_CP_IRWC_ACLK_FC_DONE_INTR_IRST		BIT_5				
/* DCLK Frequency Change Done Interrupt Read Clear */
#define	PMUA_CP_IRWC_DCLK_FC_DONE_INTR_IRST		BIT_4				
/* AP Frequency Change Done Interrupt Read Clear */
#define	PMUA_CP_IRWC_AP_FC_DONE_INTR_IRST		BIT_3				
/* CP Frequency Change Done Interrupt Read Clear */
#define	PMUA_CP_IRWC_CP_FC_DONE_INTR_IRST		BIT_2				
/* AP FC Interrupt Read Clear */
#define	PMUA_CP_IRWC_AP_FC_INTR_IRST			BIT_1				
/* CP FC Interrupt Read Clear */
#define	PMUA_CP_IRWC_CP_FC_INTR_IRST			BIT_0				

/*	PMUA_CP_ISR					0x0078	PMU CP Interrupt Status Register */
/*		Bit(s) PMUA_CP_ISR_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Status */
#define	PMUA_CP_ISR_AP_IDLE_WAKE_INTR_ISR		BIT_7				
/* CP Idle Wake up Interrupt Status */
#define	PMUA_CP_ISR_CP_IDLE_WAKE_INTR_ISR		BIT_6				
/* ACLK Frequency Change Done Interrupt Status */
#define	PMUA_CP_ISR_ACLK_FC_DONE_INTR_ISR		BIT_5				
/* DCLK Frequency Change Done Interrupt Status */
#define	PMUA_CP_ISR_DCLK_FC_DONE_INTR_ISR		BIT_4				
/* AP Frequency Change Done Interrupt Status */
#define	PMUA_CP_ISR_AP_FC_DONE_INTR_ISR			BIT_3				
/* CP Frequency Change Done Interrupt Status */
#define	PMUA_CP_ISR_CP_FC_DONE_INTR_ISR			BIT_2				
/* AP FC Interrupt Status */
#define	PMUA_CP_ISR_AP_FC_ISR					BIT_1				
/* CP FC Interrupt Status */
#define	PMUA_CP_ISR_CP_FC_ISR					BIT_0				

/*	PMUA_SD_ROT_WAKE_CLR		0x007C	SDIO/Rotary Wake Clear Register */
/*		Bit(s) PMUA_SD_ROT_WAKE_CLR_RSRV_31_3 reserved */
/* Rotary Wake Clear */
#define	PMUA_SD_ROT_WAKE_CLR_ROT_WK_CLR			BIT_2				
/* SDH1 Wake Clear */
#define	PMUA_SD_ROT_WAKE_CLR_SDH1_WK_CLR		BIT_1				
/* SDH0 Wake Clear */
#define	PMUA_SD_ROT_WAKE_CLR_SDH0_WK_CLR		BIT_0				

/*	PMUA_PWR_STBL_TIMER			0x0084	Power Stable Timer Register */
/*		Bit(s) PMUA_PWR_STBL_TIMER_RSRV_31_24 reserved */
/* Clock Prescaler */
#define	PMUA_PWR_STBL_TIMER_PWR_CLK_PRE_MSK				SHIFT16(0xff)	
#define	PMUA_PWR_STBL_TIMER_PWR_CLK_PRE_BASE			16
/* Power UP Stable Timer */
#define	PMUA_PWR_STBL_TIMER_PWR_UP_STBL_TIMER_MSK		SHIFT8(0xff)	
#define	PMUA_PWR_STBL_TIMER_PWR_UP_STBL_TIMER_BASE		8
/* Power Down Stable Timer */
#define	PMUA_PWR_STBL_TIMER_PWR_DWN_STBL_TIMER_MSK		SHIFT0(0xff)	
#define	PMUA_PWR_STBL_TIMER_PWR_DWN_STBL_TIMER_BASE		0

/*	PMUA_DEBUG					0x0088	PMU Debug Register */
/*		Bit(s) PMUA_DEBUG_RSRV_31_24 reserved */
/* Mask the MC Idle Exit during AP Idle Mode */
#define	PMUA_DEBUG_MASK_MC_IDLE_EXIT_ACK			BIT_23			
/* Allow Frequency Change when AP is Idle */
#define	PMUA_DEBUG_ALLOW_FC_AP_WFI					BIT_22			
/* Allow Frequency Change when CP is Idle */
#define	PMUA_DEBUG_ALLOW_FC_CP_WFI					BIT_21			
/* Mask MC Clock On Check */
#define	PMUA_DEBUG_MASK_MC_CLK_ON_CHECK				BIT_20			
/* Mask MC Clock Off Check */
#define	PMUA_DEBUG_MASK_MC_CLK_OFF_CHECK			BIT_19			
/* Mask AP JTAG Idle Indication */
#define	PMUA_DEBUG_MASK_AP_JTAG_IDLE_INDICATION		BIT_18			
/* Mask CP JTAG Idle Indication */
#define	PMUA_DEBUG_MASK_CP_JTAG_IDLE_INDICATION		BIT_17			
/* Mask Main Clock On Check */
#define	PMUA_DEBUG_MASK_MAIN_CLK_ON_CHECK			BIT_16			
/* Mask Main Clock Off Check */
#define	PMUA_DEBUG_MASK_MAIN_CLK_OFF_CHECK			BIT_15			
/* Mask Memory Controller Idle Indication */
#define	PMUA_DEBUG_MASK_MC_IDLE_INDICATION			BIT_14			
/* Mask DMA Idle Indication */
#define	PMUA_DEBUG_MASK_DMA_IDLE_INDICATION			BIT_13			
/* Mask AP Idle Indication */
#define	PMUA_DEBUG_MASK_AP_IDLE_IND					BIT_12			
/* Mask CP Idle Indication */
#define	PMUA_DEBUG_MASK_CP_IDLE_IND					BIT_11			
/* Mask AP Clock on Acknowledge for Idle Mode */
#define	PMUA_DEBUG_MASK_AP_CLK_ON_ACK_FOR_IDLE		BIT_10			
/* Mask AP Clock off Acknowledge for Idle Mode */
#define	PMUA_DEBUG_MASK_AP_CLK_OFF_ACK_FOR_IDLE		BIT_9			
/* Mask CP Clock on Acknowledge for Idle Mode */
#define	PMUA_DEBUG_MASK_CP_CLK_ON_ACK_FOR_IDLE		BIT_8			
/* Mask CP Clock off Acknowledge for Idle Mode */
#define	PMUA_DEBUG_MASK_CP_CLK_OFF_ACK_FOR_IDLE		BIT_7			
/* Mask Aclk off Acknowledge */
#define	PMUA_DEBUG_MASK_ACLK_CLK_OFF_ACK			BIT_6			
/* Mask Dclk off Acknowledge */
#define	PMUA_DEBUG_MASK_DCLK_CLK_OFF_ACK			BIT_5			
/* Mask AP Clock off Acknowledge */
#define	PMUA_DEBUG_MASK_AP_CLK_OFF_ACK				BIT_4			
/* Mask CP Clock off Acknowledge */
#define	PMUA_DEBUG_MASK_CP_CLK_OFF_ACK				BIT_3			
/* Mask MC Halt Acknowledge */
#define	PMUA_DEBUG_MASK_MC_HALT						BIT_2			
/* Mask AP Halt Acknowledge */
#define	PMUA_DEBUG_MASK_AP_HALT						BIT_1			
/* Mask CP Halt Acknowledge */
#define	PMUA_DEBUG_MASK_CP_HALT						BIT_0			

/*	PMUA_SRAM_PWR_DWN			0x008C	Core SRAM Power Down Register */
/* SRAM Power Down */
#define	PMUA_SRAM_PWR_DWN_SRAM_PWRDWN_MSK		SHIFT0(0xffffffff)	
#define	PMUA_SRAM_PWR_DWN_SRAM_PWRDWN_BASE		0

/*	PMUA_CORE_STATUS			0x0090	Core Status Register */
/*		Bit(s) PMUA_CORE_STATUS_RSRV_31_4 reserved */
/* AP core idle mode Indication */
#define	PMUA_CORE_STATUS_AP_IDLE			BIT_3				
/* AP WFI idle mode Indication */
#define	PMUA_CORE_STATUS_AP_WFI				BIT_2				
/* CP core idle mode Indication */
#define	PMUA_CORE_STATUS_CP_IDLE			BIT_1				
/* CP WFI idle mode Indication */
#define	PMUA_CORE_STATUS_CP_WFI				BIT_0				

/*	PMUA_RES_FRM_SLP_CLR		0x0094	Resume from Sleep Clear Register */
/*		Bit(s) PMUA_RES_FRM_SLP_CLR_RSRV_31_1 reserved */
/* Clear Resume from Sleep Indication */
#define	PMUA_RES_FRM_SLP_CLR_CLR_RSM_FRM_SLP		BIT_0				

/*	PMUA_AP_IMR					0x0098	PMU AP Interrupt Mask Register */
/*		Bit(s) PMUA_AP_IMR_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Mask */
#define	PMUA_AP_IMR_AP_IDLE_WAKE_INTR_MASK		BIT_7				
/* CP Idle Wake up Interrupt Mask */
#define	PMUA_AP_IMR_CP_IDLE_WAKE_INTR_MASK		BIT_6				
/* ACLK Frequency Change Done Interrupt Mask */
#define	PMUA_AP_IMR_ACLK_FC_DONE_INTR_MASK		BIT_5				
/* DCLK Frequency Change Done Interrupt Mask */
#define	PMUA_AP_IMR_DCLK_FC_DONE_INTR_MASK		BIT_4				
/* Frequency Change Done for AP Interrupt Mask */
#define	PMUA_AP_IMR_AP_FC_DONE_INTR_MASK		BIT_3				
/* Frequency Change Done for CP Interrupt Mask */
#define	PMUA_AP_IMR_CP_FC_DONE_INTR_MASK		BIT_2				
/* Frequency Change done by AP Interrupt Mask */
#define	PMUA_AP_IMR_AP_FC_INTR_MASK				BIT_1				
/* Frequency Change done by CP Interrupt Mask */
#define	PMUA_AP_IMR_CP_FC_INTR_MASK				BIT_0				

/*	PMUA_AP_IRWC				0x009c	PMU AP Interrupt READ/WRITE Clear
 *										Register
 */
/*		Bit(s) PMUA_AP_IRWC_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Read Clear */
#define	PMUA_AP_IRWC_AP_IDLE_WAKE_INTR_IRST		BIT_7				
/* CP Idle Wake up Interrupt Read Clear */
#define	PMUA_AP_IRWC_CP_IDLE_WAKE_INTR_IRST		BIT_6				
/* ACLK Frequency Change Done Interrupt Read Clear */
#define	PMUA_AP_IRWC_ACLK_FC_DONE_INTR_IRST		BIT_5				
/* DCLK Frequency Change Done Interrupt Read Clear */
#define	PMUA_AP_IRWC_DCLK_FC_DONE_INTR_IRST		BIT_4				
/* AP Frequency Change Done Interrupt Read Clear */
#define	PMUA_AP_IRWC_AP_FC_DONE_INTR_IRST		BIT_3				
/* CP Frequency Change Done Interrupt Read Clear */
#define	PMUA_AP_IRWC_CP_FC_DONE_INTR_IRST		BIT_2				
/* AP FC Interrupt Read Clear */
#define	PMUA_AP_IRWC_AP_FC_INTR_IRST			BIT_1				
/* CP FC Interrupt Read Clear */
#define	PMUA_AP_IRWC_CP_FC_INTR_IRST			BIT_0				

/*	PMUA_AP_ISR					0x00a0	PMU AP Interrupt Status Register */
/*		Bit(s) PMUA_AP_ISR_RSRV_31_8 reserved */
/* AP Idle Wake up Interrupt Status */
#define	PMUA_AP_ISR_AP_IDLE_WAKE_INTR_ISR		BIT_7				
/* CP Idle Wake up Interrupt Status */
#define	PMUA_AP_ISR_CP_IDLE_WAKE_INTR_ISR		BIT_6				
/* ACLK Frequency Change Done Interrupt Status */
#define	PMUA_AP_ISR_ACLK_FC_DONE_INTR_ISR		BIT_5				
/* DCLK Frequency Change Done Interrupt Status */
#define	PMUA_AP_ISR_DCLK_FC_DONE_INTR_ISR		BIT_4				
/* AP Frequency Change Done Interrupt Status */
#define	PMUA_AP_ISR_AP_FC_DONE_INTR_ISR			BIT_3				
/* CP Frequency Change Done Interrupt Status */
#define	PMUA_AP_ISR_CP_FC_DONE_INTR_ISR			BIT_2				
/* AP FC Interrupt Status */
#define	PMUA_AP_ISR_AP_FC_ISR					BIT_1				
/* CP FC Interrupt Status */
#define	PMUA_AP_ISR_CP_FC_ISR					BIT_0				

/*	PMUA_DTC_CLK_RES_CTRL		0x00ac	DTC Clock/Reset Control Register */
/*		Bit(s) PMUA_DTC_CLK_RES_CTRL_RSRV_31_4 reserved */
/* DTC AXI Clock Enable */
#define	PMUA_DTC_CLK_RES_CTRL_DTC_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_DTC_CLK_RES_CTRL_RSRV_2_1 reserved */
/* DTC AXI Reset */
#define	PMUA_DTC_CLK_RES_CTRL_DTC_AXI_RST			BIT_0				

/*	PMUA_MC_HW_SLP_TYPE			0x00b0	Memory Controller Hardware Sleep Type
 *										Register
 */
/*		Bit(s) PMUA_MC_HW_SLP_TYPE_RSRV_31_3 reserved */
/* Memory Controller Hardware Sleep Type */
#define	PMUA_MC_HW_SLP_TYPE_MC_HW_SLP_TYPE_MSK		SHIFT0(0x7)			
#define	PMUA_MC_HW_SLP_TYPE_MC_HW_SLP_TYPE_BASE		0

/*	PMUA_MC_SLP_REQ_AP			0x00b4	Memory Controller 926 Sleep Request
 *										Register
 */
/*		Bit(s) PMUA_MC_SLP_REQ_AP_RSRV_31_2 reserved */
/* Memory Controller low power acknowledge */
#define	PMUA_MC_SLP_REQ_AP_MC_SLP_ACK			BIT_1				
/* Memory Controller 926 Sleep Request */
#define	PMUA_MC_SLP_REQ_AP_MC_SLP_REQ_AP		BIT_0				

/*	PMUA_MC_SLP_REQ_CP			0x00b8	Memory Controller 946 Sleep Request
 *										Register
 */
/*		Bit(s) PMUA_MC_SLP_REQ_CP_RSRV_31_2 reserved */
/* Memory Controller low power acknowledge */
#define	PMUA_MC_SLP_REQ_CP_MC_SLP_ACK			BIT_1				
/* Memory Controller 946 Sleep Request */
#define	PMUA_MC_SLP_REQ_CP_MC_SLP_REQ_CP		BIT_0				

/*	PMUA_MC_SLP_REQ_MSA			0x00bc	Memory Controller MSA Sleep Request
 *										Register
 */
/*		Bit(s) PMUA_MC_SLP_REQ_MSA_RSRV_31_2 reserved */
/* Memory Controller low power acknowledge */
#define	PMUA_MC_SLP_REQ_MSA_MC_SLP_ACK			BIT_1				
/* Memory Controller MSA Sleep Request */
#define	PMUA_MC_SLP_REQ_MSA_MC_SLP_REQ_MSA		BIT_0				

/*	PMUA_MC_SW_SLP_TYPE			0x00c0	Memory Controller Software Sleep Type
 *										Register
 */
/*		Bit(s) PMUA_MC_SW_SLP_TYPE_RSRV_31_3 reserved */
/* Software Controlled Sleep Type for Memory Controller */
#define	PMUA_MC_SW_SLP_TYPE_MC_SW_SLP_TYPE_MSK		SHIFT0(0x7)			
#define	PMUA_MC_SW_SLP_TYPE_MC_SW_SLP_TYPE_BASE		0

/*	PMUA_PLL_SEL_STATUS			0x00c4	PLL Clock Select Status Register */
/*		Bit(s) PMUA_PLL_SEL_STATUS_RSRV_31_8 reserved */
/* BUS Clock PLL Select */
#define	PMUA_PLL_SEL_STATUS_ACLK_PLL_SEL_MSK		SHIFT6(0x3)			
#define	PMUA_PLL_SEL_STATUS_ACLK_PLL_SEL_BASE		6
/* Memory Clock PLL Select */
#define	PMUA_PLL_SEL_STATUS_DCLK_PLL_SEL_MSK		SHIFT4(0x3)			
#define	PMUA_PLL_SEL_STATUS_DCLK_PLL_SEL_BASE		4
/* 926 PLL Select */
#define	PMUA_PLL_SEL_STATUS_AP_PLL_SEL_MSK			SHIFT2(0x3)			
#define	PMUA_PLL_SEL_STATUS_AP_PLL_SEL_BASE			2
/* 946 PLL Select */
#define	PMUA_PLL_SEL_STATUS_CP_PLL_SEL_MSK			SHIFT0(0x3)			
#define	PMUA_PLL_SEL_STATUS_CP_PLL_SEL_BASE			0

/*	PMUA_SYNC_MODE_BYPASS		0x00c8	SYNC MODE BYPASS Register */
/*		Bit(s) PMUA_SYNC_MODE_BYPASS_RSRV_31_3 reserved */
/* MC Sync Bypass */
#define	PMUA_SYNC_MODE_BYPASS_MC_SYNC_BYPASS		BIT_2				
/* AP Sync Bypass */
#define	PMUA_SYNC_MODE_BYPASS_AP_SYNC_BYPASS		BIT_1				
/* CP Sync Bypass */
#define	PMUA_SYNC_MODE_BYPASS_CP_SYNC_BYPASS		BIT_0				

/*	PMUA_GC_CLK_RES_CTRL		0x00cc	GC Clock/Reset Control Register */
/*		Bit(s) PMUA_GC_CLK_RES_CTRL_RSRV_31_7 reserved */
/*		Bit(s) PMUA_GC_CLK_RES_CTRL_RSRV_5 reserved */
/* GC Peripheral Clock Enable */
#define	PMUA_GC_CLK_RES_CTRL_GC_CLK_EN				BIT_4				
/* GC AXI Clock Enable */
#define	PMUA_GC_CLK_RES_CTRL_GC_AXICLK_EN			BIT_3				
/*		Bit(s) PMUA_GC_CLK_RES_CTRL_RSRV_2 reserved */
/* GC Peripheral Reset */
#define	PMUA_GC_CLK_RES_CTRL_GC_RST1				BIT_1				
/* GC AXI Reset */
#define	PMUA_GC_CLK_RES_CTRL_GC_AXI_RST				BIT_0				

/*	PMUA_GC_PWRDWN				0x00d0	GC Power Down Register */
/*		Bit(s) PMUA_GC_PWRDWN_RSRV_31_5 reserved */
/* GC Isolation Enable */
#define	PMUA_GC_PWRDWN_GC_ISB				BIT_4				
#define	PMUA_GC_PWRDWN_GC3D_PWRUP_MSK		SHIFT2(0x3)			/* GC 3D Power UP */
#define	PMUA_GC_PWRDWN_GC3D_PWRUP_BASE		2
#define	PMUA_GC_PWRDWN_GC_PWRUP_MSK			SHIFT0(0x3)			/* GC Power UP */
#define	PMUA_GC_PWRDWN_GC_PWRUP_BASE		0

/*	PMUA_SMEMC_CLK_RES_CTRL		0x00d4	SMEMC Clock/Reset Control Register */
/*		Bit(s) PMUA_SMEMC_CLK_RES_CTRL_RSRV_31_7 reserved */
/* SMEM Peripheral Clock Select */
#define	PMUA_SMEMC_CLK_RES_CTRL_SMEMC_CLK_SEL		BIT_6				
/*		Bit(s) PMUA_SMEMC_CLK_RES_CTRL_RSRV_5 reserved */
/* SMEMC Peripheral Clock Enable */
#define	PMUA_SMEMC_CLK_RES_CTRL_SMEMC_CLK_EN		BIT_4				
/* SMEMC AXI Clock Enable */
#define	PMUA_SMEMC_CLK_RES_CTRL_SMEMC_AXICLK_EN		BIT_3				
/*		Bit(s) PMUA_SMEMC_CLK_RES_CTRL_RSRV_2 reserved */
/* SMEMC Peripheral Reset */
#define	PMUA_SMEMC_CLK_RES_CTRL_SMEMC_RST			BIT_1				
/* SMEMC AXI Reset */
#define	PMUA_SMEMC_CLK_RES_CTRL_SMEMC_AXI_RST		BIT_0				



/* -------------------- */


#endif	/* __INC_PMUA_H */
